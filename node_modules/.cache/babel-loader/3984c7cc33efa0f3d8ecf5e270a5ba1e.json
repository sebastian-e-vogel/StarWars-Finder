{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Desktop/StarWars-Finder/src/components/ViewItem.js\";\nimport React from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport CardFilm from \"./CardFilm\";\nimport CardCharacter from \"./CardCharacter\";\nimport { selectFilm } from \"../redux/actions/PeliculasActions\";\nimport { selectSection } from \"../redux/actions/SelectSectionActions\";\nimport languajeMap from \"./LanguajeMap\";\n\nfunction ViewItem(props) {\n  const charactersResults = props.state.personajes.listPersonajes.results;\n  const filmsResults = props.state.peliculas.listPeliculas.results;\n  const {\n    selectedCharacter\n  } = props.state.personajes;\n  const {\n    selectedFilm\n  } = props.state.peliculas;\n  const {\n    selectedSection\n  } = props.state.sections;\n\n  const getFilmId = filmUrl => filmsResults.findIndex(film => film.url === filmUrl);\n\n  const showFilm = filmUrl => {\n    props.selectSection(\"peliculas\");\n    props.selectFilm(getFilmId(filmUrl));\n  };\n\n  const translate = wordToTranslate => languajeMap[wordToTranslate];\n\n  if (!charactersResults || !filmsResults) {\n    return React.createElement(\"div\", {\n      className: \"listCardItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(CardCharacter, {\n      name: \"\",\n      eyeColor: \"\",\n      height: \"\",\n      mass: \"\",\n      films: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  } else if (selectedSection === \"personajes\") {\n    return React.createElement(\"div\", {\n      className: \"listCardItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(CardCharacter, {\n      name: charactersResults[selectedCharacter].name,\n      eyeColor: translate(charactersResults[selectedCharacter].eye_color),\n      height: charactersResults[selectedCharacter].height === \"unknown\" ? \"Desconocida\" : `${charactersResults[selectedCharacter].height} cm`,\n      mass: charactersResults[selectedCharacter].mass === \"unknown\" ? \"Desconocido\" : `${charactersResults[selectedCharacter].mass} kg`,\n      films: charactersResults[selectedCharacter].films.map(filmUrl => {\n        return React.createElement(\"p\", {\n          className: \"card-film\",\n          onClick: () => showFilm(filmUrl),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, filmsResults[getFilmId(filmUrl)].title);\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"listCardItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(CardFilm, {\n    title: filmsResults[selectedFilm].title,\n    director: filmsResults[selectedFilm].director,\n    producer: filmsResults[selectedFilm].producer,\n    relaseDate: filmsResults[selectedFilm].release_date.split(\"-\").reverse().join(\"/\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectSection: section => dispatch(selectSection(section)),\n    selectFilm: id => dispatch(selectFilm(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewItem);","map":{"version":3,"sources":["/home/sebastian/Desktop/StarWars-Finder/src/components/ViewItem.js"],"names":["React","connect","CardFilm","CardCharacter","selectFilm","selectSection","languajeMap","ViewItem","props","charactersResults","state","personajes","listPersonajes","results","filmsResults","peliculas","listPeliculas","selectedCharacter","selectedFilm","selectedSection","sections","getFilmId","filmUrl","findIndex","film","url","showFilm","translate","wordToTranslate","name","eye_color","height","mass","films","map","title","director","producer","release_date","split","reverse","join","mapStateToProps","mapDispatchToProps","dispatch","section","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport { connect } from \"react-redux\";\nimport CardFilm from \"./CardFilm\";\nimport CardCharacter from \"./CardCharacter\";\nimport { selectFilm } from \"../redux/actions/PeliculasActions\";\nimport { selectSection } from \"../redux/actions/SelectSectionActions\";\nimport languajeMap from \"./LanguajeMap\";\n\nfunction ViewItem(props) {\n  const charactersResults = props.state.personajes.listPersonajes.results;\n  const filmsResults = props.state.peliculas.listPeliculas.results;\n  const { selectedCharacter } = props.state.personajes;\n  const { selectedFilm } = props.state.peliculas;\n  const { selectedSection } = props.state.sections;\n\n  const getFilmId = filmUrl =>\n    filmsResults.findIndex(film => film.url === filmUrl);\n\n  const showFilm = filmUrl => {\n    props.selectSection(\"peliculas\");\n    props.selectFilm(getFilmId(filmUrl));\n  };\n\n  const translate = wordToTranslate => languajeMap[wordToTranslate];\n\n  if (!charactersResults || !filmsResults) {\n    return (\n      <div className=\"listCardItem\">\n        <CardCharacter name=\"\" eyeColor=\"\" height=\"\" mass=\"\" films=\"\" />\n      </div>\n    );\n  } else if (selectedSection === \"personajes\") {\n    return (\n      <div className=\"listCardItem\">\n        <CardCharacter\n          name={charactersResults[selectedCharacter].name}\n          eyeColor={translate(charactersResults[selectedCharacter].eye_color)}\n          height={\n            charactersResults[selectedCharacter].height === \"unknown\"\n              ? \"Desconocida\"\n              : `${charactersResults[selectedCharacter].height} cm`\n          }\n          mass={\n            charactersResults[selectedCharacter].mass === \"unknown\"\n              ? \"Desconocido\"\n              : `${charactersResults[selectedCharacter].mass} kg`\n          } \n          films={charactersResults[selectedCharacter].films.map(filmUrl => {\n            return (\n              <p className=\"card-film\" onClick={() => showFilm(filmUrl)}>\n                {filmsResults[getFilmId(filmUrl)].title}\n              </p>\n            );\n          })}\n        />\n      </div>\n    );\n  }\n  return (\n    <div className=\"listCardItem\">\n      <CardFilm\n        title={filmsResults[selectedFilm].title}\n        director={filmsResults[selectedFilm].director}\n        producer={filmsResults[selectedFilm].producer}\n        relaseDate={filmsResults[selectedFilm].release_date\n          .split(\"-\")\n          .reverse()\n          .join(\"/\")}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectSection: section => dispatch(selectSection(section)),\n    selectFilm: id => dispatch(selectFilm(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewItem);\n"]},"metadata":{},"sourceType":"module"}